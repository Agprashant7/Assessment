{"version":3,"sources":["table.js","admission.js","App.js","serviceWorker.js","index.js","table.module.css","admission.module.css"],"names":["Table","props","state","studentdata","list","Next","history","push","updated","sort","a","b","name","localeCompare","this","setState","console","log","table","map","i","j","arr","parseInt","marks","Science","English","c","Maths","total","colour","res","Math","max","style","color","textTransform","className","classes","capName","rollNumber","container","tab","colSpan","fontStyle","fontWeight","subHeading","onClick","React","Component","Admission","formdiv","align","class","type","pattern","maxLength","placeholder","required","box","value","submit","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.3a52bb20.chunk.js","sourcesContent":["import React from 'react';\r\nimport studentdata from './data.json';\r\nimport classes from './table.module.css';\r\nimport {Redirect}from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nclass Table extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n    \r\n    }\r\n    state={\r\n        studentdata:studentdata,\r\n        list:[]\r\n  \r\n      }\r\n      componentDidMount(){\r\n          {/*\r\n        Axios.get('https://5f3ce7ff6c11f80016d6f6a9.mockapi.io/students')\r\n        .then(respons=>{\r\n            this.setState({studentdata:respons.data})\r\n            console.log(this.state.studentdata)\r\n        });\r\n    */  }{/* backend API   */}\r\n\r\n        const updated=studentdata.sort((a,b)=>a.name.localeCompare(b.name));\r\n        this.setState({studentdata:updated})\r\n        console.log(this.state.studentdata)\r\n      };\r\n     \r\n     \r\n     \r\n      Next=()=>{\r\n          this.props.history.push('/Admission')\r\n      }\r\n     \r\n      render(){\r\n         \r\n        const table=this.state.studentdata.map((i,j)=>{\r\n            let arr=[]\r\n            let a=parseInt(i.marks.Science);\r\n            let b= parseInt(i.marks.English);\r\n            let c= parseInt(i.marks.Maths);\r\n            let total= a + b + c;\r\n            let colour='black'\r\n            arr.push(total)\r\n            \r\n            let res=''\r\n           if(a<20 || b<20 || c<20){\r\n               res=\"fail\"\r\n               colour='red'\r\n           }\r\n           else {\r\n            let large=Math.max(arr)\r\n            total>large?res='topper':res='pass'\r\n           }\r\n           \r\n           \r\n          return(\r\n            <tr>\r\n                \r\n          <td style={{color:colour,textTransform:'capitalize'}} className={classes.capName}>{i.name}</td>\r\n          <td style={{color:colour}}>{i.rollNumber}</td>\r\n          <td style={{color:colour}}>{total}</td>\r\n          <td style={{color:colour}}>{res}</td>\r\n            </tr>\r\n      \r\n          \r\n          )\r\n        })\r\n\r\n         return(\r\n            <div className={classes.container}>\r\n                <table className={classes.tab}>\r\n                    <tr><td colSpan='4'style={{fontStyle:\"bold\",fontWeight:\"bolder\"}}>Students result</td></tr>\r\n                    <tr>\r\n                        <td className={classes.subHeading}>Student Name</td>\r\n                        <td className={classes.subHeading}>RollNumber</td>\r\n                        <td className={classes.subHeading}>Total</td>\r\n                        <td className={classes.subHeading}>status</td>\r\n                    </tr>\r\n                {table}\r\n                </table>\r\n                <center>\r\n                <button onClick={this.Next} >Admission Page</button></center>\r\n            </div>\r\n         )\r\n          \r\n      }\r\n}\r\nexport default Table","import React from 'react';\r\nimport classes from './admission.module.css'\r\n\r\n\r\nclass Admission extends React.Component{\r\n    render(){\r\n        return(\r\n         \r\n            \r\n            <form className={classes.formdiv}>\r\n                <h1 align=\"center\">Register</h1>\r\n\t\r\n\t\t\r\n\t\t<div class=\"field\">\r\n\t\t\t<input type=\"text\" name=\"uname\" pattern=\"[A-Za-z]+\" maxLength='20' placeholder=\"Firstname\"  required  className={classes.box}/>\r\n\t\t</div>\r\n\t\t<div class=\"field\">\r\n\t\t\t<input type=\"text\" name=\"Lname\" pattern=\"[A-Za-z]+\" maxLength='20' placeholder=\"LastName\" required className={classes.box}/>\r\n\t\t</div>\r\n\t\t<div class=\"field\">\r\n\t\t\t<input type=\"text\" name=\"class\" placeholder=\"Class\" required className={classes.box}/>\r\n\t\t</div>\r\n\t\t<div class=\"field\">\r\n            <label>Year of Passing</label>\r\n\t\t\t<input type=\"date\" max=\"2017-01-01\" name=\"date\" placeholder=\"Year of Passinng\" required className={classes.box}/>\r\n\t\t</div>\r\n        <div class=\"field\">\r\n\t\t\t<input type=\"number\" name=\"date\" placeholder=\"Marks inPercentage\" required className={classes.box}/>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"sub\">\r\n            <center>\r\n\t\t\t<input type=\"submit\" name=\"submit\" value=\"Register\" className={classes.submit}/></center>\r\n\t\t</div>\r\n        \r\n\t\t\r\n            </form>\r\n            \r\n        )\r\n    }\r\n    \r\n}\r\nexport default Admission;","import React from 'react';\nimport './App.css';\nimport studentdata from './data.json'\nimport {Route,BrowserRouter} from 'react-router-dom';\nimport Table from './table';\nimport Admission from './admission'\n\n\nclass App extends React.Component{\n \n    state={\n      studentdata:studentdata\n    }\n  \n\n\n\n\n  render(){\n    \n  \n    return(\n      <BrowserRouter>\n      <div>\n  <Route exact path='/' component={Table}/>\n  <Route path='/Admission' component={Admission}/>\n   \n      </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"table_container__3UiXG\",\"tab\":\"table_tab__1bVzw\",\"subHeading\":\"table_subHeading__1JZI6\",\"heading\":\"table_heading__CVn86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formdiv\":\"admission_formdiv__3AUZx\",\"field\":\"admission_field__A1_A6\",\"box\":\"admission_box__2GIFC\",\"submit\":\"admission_submit__3OER4\",\"sub\":\"admission_sub__1WmY3\"};"],"sourceRoot":""}